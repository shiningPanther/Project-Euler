'''
Problem 2:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

# Recursive function to create the Fibonacci numbers up to a certain limit and also keeps score of the sum of even-valued numbers
def createFibonacci(x, y, limit):
	# This global declaration is necessary to make python understand where to find the variable sumFibo
	global sumFibo
	newNumber = x + y
	if newNumber % 2 == 0:
		sumFibo += newNumber
	if newNumber < limit:
		fibonacciNumbers.append(newNumber)
		createFibonacci(fibonacciNumbers[-1], fibonacciNumbers[-2], limit)


# Define the first numbers for the recursive function
fibonacciNumbers = [1, 2]
# The sum of the Fibonacci numbers already starts at 2 for the first two terms
sumFibo = 2

limit = 4e6
createFibonacci(1,2,limit)
print('Fibonacci numbers:', fibonacciNumbers)
print('Sum of even Fibonacci numbers:', sumFibo)
